{"version":3,"sources":["../src/generateTestFile.ts"],"names":["TEMPLATE","path","resolve","__dirname","generateTestFile","data","filename","filepath","options","root","process","cwd","dest","relative","saveToSameFolder","console","log","match","filepathRelative","fs","mkdirp","target","content","readFile","writeFile","ejs","render","getRequiredProps","getOptionalPropsArray","getPropValue","componentName"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAEA;;;;AAMA,MAAMA,QAAQ,GAAGC,cAAKC,OAAL,CAAaC,SAAb,EAAwB,sBAAxB,CAAjB;;AAEO,eAAeC,gBAAf,CACLC,IADK,EAELC,QAFK,EAGLC,QAHK,EAILC,OAJK,EAKL;AACA,QAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,EAAb;;AAEA,MAAIC,IAAI,GAAGX,cAAKY,QAAL,CAAcJ,IAAd,EAAoB,WAApB,CAAX;;AACA,MAAID,OAAO,CAACM,gBAAZ,EAA8B;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACAK,IAAAA,IAAI,GAAGX,cAAKY,QAAL,CAAcJ,IAAd,EAAoBF,QAAQ,CAACU,KAAT,CAAe,YAAf,EAA6B,CAA7B,KAAmC,EAAvD,CAAP;AACD;;AACD,QAAMC,gBAAgB,GAAGV,OAAO,CAACM,gBAAR,GACpB,KAAIb,cAAKY,QAAL,CAAcD,IAAd,EAAoBL,QAApB,CAA8B,EADd,GAErBN,cAAKY,QAAL,CAAcD,IAAd,EAAoBL,QAApB,CAFJ;AAGA,QAAMY,iBAAGC,MAAH,CAAUR,IAAV,CAAN;AAEA,QAAMS,MAAM,GAAI,GAAET,IAAK,IAAGN,QAAS,WAAnC;AACA,QAAMgB,OAAO,GAAG,MAAMH,iBAAGI,QAAH,CAAYvB,QAAZ,EAAsB,MAAtB,CAAtB;AAEA,oBAAM,cAAaqB,MAAO,EAA1B;AACA,QAAMF,iBAAGK,SAAH,CACJH,MADI,EAEJI,aAAIC,MAAJ,CAAWJ,OAAX,EAAoB;AAClBjB,IAAAA,IADkB;AAElBsB,IAAAA,gBAAgB,EAAhBA,0BAFkB;AAGlBC,IAAAA,qBAAqB,EAArBA,+BAHkB;AAIlBC,IAAAA,YAAY,EAAZA,sBAJkB;AAKlBC,IAAAA,aAAa,EAAExB,QALG;AAMlBC,IAAAA,QAAQ,EAAEW;AANQ,GAApB,CAFI,CAAN;AAWA,uBAAS,4BAA2BG,MAAO,EAA3C;AACD","sourcesContent":["import path from 'path';\nimport ejs from 'ejs';\nimport fs from 'fs-extra';\n\nimport { info, success } from './utils/logger';\nimport { TestPropsInfo } from './serializeSymbol';\nimport {\n  getRequiredProps,\n  getOptionalPropsArray,\n  getPropValue,\n} from './getProps';\n\nconst TEMPLATE = path.resolve(__dirname, '../template/template');\n\nexport async function generateTestFile(\n  data: TestPropsInfo[],\n  filename: string,\n  filepath: string,\n  options: { saveToSameFolder: boolean }\n) {\n  const root = process.cwd();\n\n  let dest = path.relative(root, '__tests__');\n  if (options.saveToSameFolder) {\n    console.log(filepath);\n    dest = path.relative(root, filepath.match(/(.*)[\\/\\\\]/)[1] || '');\n  }\n  const filepathRelative = options.saveToSameFolder\n    ? `./${path.relative(dest, filepath)}`\n    : path.relative(dest, filepath);\n  await fs.mkdirp(dest);\n\n  const target = `${dest}/${filename}.test.tsx`;\n  const content = await fs.readFile(TEMPLATE, 'utf8');\n\n  info(`Writing to ${target}`);\n  await fs.writeFile(\n    target,\n    ejs.render(content, {\n      data,\n      getRequiredProps,\n      getOptionalPropsArray,\n      getPropValue,\n      componentName: filename,\n      filepath: filepathRelative,\n    })\n  );\n  success(`Done, check your test in ${target}`);\n}\n"],"file":"generateTestFile.js"}